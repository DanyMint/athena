version: "3.8"
services:
  athena_ps_db:
    container_name: athena_ps_db
    image: postgres:17.4-alpine
    env_file:
      - .env
    environment:
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - athenadb:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U athena -d athena_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  api-server:
    container_name: api-server
    build:
      context: api-server/
      dockerfile: "Dockerfile.dev"
    working_dir: /app
    command: ["sh", "-c", "./start_dev.sh"]
    env_file:
      - .env
    volumes:
      - ./api-server:/app
      - /app/venv  
    depends_on:
      athena_ps_db:
        condition: service_healthy
    ports:
      - "8000:8000"  

  frontend:
    container_name: frontend
    build:
      context: frontend/
      dockerfile: Dockerfile.dev
    environment:
      VITE_BACKEND_API_URL: 'http://localhost:8000/api/'

    volumes:
      - ./frontend:/app
      - /app/node_modules  # исключаем node_modules из bind mount
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0", "--port", "3000"] 
    ports:
      - "3000:3000"
    depends_on:
      - api-server

volumes:
  athenadb: